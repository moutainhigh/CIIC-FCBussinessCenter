package com.ciicsh.payroll.common

import com.ciicsh.caldispatchjob.entity.DroolsContext;
import com.ciicsh.caldispatchjob.entity.EmpPayItem;
import com.ciicsh.caldispatchjob.entity.FuncEntity;
import java.math.BigDecimal;
import java.util.List;

rule "最低工资标准" // {最低工资标准([城市])}
    when
        $context:DroolsContext()
    then
        FuncEntity func = $context.getFuncEntity("最低工资标准");
        String para1 = func.getParameters().get(0);
        String city = (String)$context.getItemValByCode(para1);

        if(city.equals("扬州")){
            func.setResult(BigDecimal.valueOf(1089.00));
        }else if(city.equals("天津")){
            func.setResult(BigDecimal.valueOf(2050.00));
        }else if(city.equals("武汉")){
            func.setResult(BigDecimal.valueOf(1750.00));
        }else if(city.equals("北京")){
            func.setResult(BigDecimal.valueOf(2000.00));
        }else if(city.equals("沈阳")){
            func.setResult(BigDecimal.valueOf(1530.00));
        }else if(city.equals("西安")){
            func.setResult(BigDecimal.valueOf(1680.00));
        }else if(city.equals("成都")){
            func.setResult(BigDecimal.valueOf(1500.00));
        }else if(city.equals("广州")){
            func.setResult(BigDecimal.valueOf(1895.00));
        }else if(city.equals("济南")){
            func.setResult(BigDecimal.valueOf(1810.00));
        }else if(city.equals("上海")){
            func.setResult(BigDecimal.valueOf(2300.00));
        }else{
            func.setResult(BigDecimal.valueOf(0.00));
        }
end

rule "连续工龄" // {连续工龄([首次参加工作日期],[离职日期])}
    when
        $context:DroolsContext()
    then
        FuncEntity func = $context.getFuncEntity("连续工龄");
        String para1 = func.getParameters().get(0);
        String para2 = func.getParameters().get(1);

        String firstWorkingDate = (String)$context.getItemValByCode(para1); // 首次参加工作日期
        String leaveDate = (String)$context.getItemValByCode(para2); // 离职日期

        func.setResult(BigDecimal.valueOf(1.2)); // TODO

end

rule "工龄" // {工龄([入职日期],[离职日期])}
    when
        $context:DroolsContext()
    then
        FuncEntity func = $context.getFuncEntity("工龄");
        String para1 = func.getParameters().get(0);
        String para2 = func.getParameters().get(1);

        String onboardDate = (String)$context.getItemValByCode(para1); // 入职日期
        String leaveDate = (String)$context.getItemValByCode(para2); // 离职日期

        func.setResult(BigDecimal.valueOf(1.2)); // TODO

end

rule "免抵额" // {免抵额([国籍])}
    when
        $context:DroolsContext()
    then
        FuncEntity func = $context.getFuncEntity("免抵额");
        String para1 = func.getParameters().get(0);
        String nation = (String)$context.getItemValByCode(para1);
        nation = nation.trim(); // 去除前后空格

        if(nation.equals("中华人民共和国")){
            func.setResult(BigDecimal.valueOf(3500.00));
        }else{
            func.setResult(BigDecimal.valueOf(4800.00));
        }
end

rule "年终奖税" // {年终奖税([年终奖应纳税所得额])}
    when
        $context:DroolsContext()
    then
        FuncEntity func = $context.getFuncEntity("年终奖税");
        String para1 = func.getParameters().get(0);
        double annualPay = (double)$context.getItemValByCode(para1); //年终奖应纳税所得额

        func.setResult(BigDecimal.valueOf(14800.00)); // TODO
end

rule "股票期权税" // {股票期权税([当年应纳股票期权税],[当年已纳股票期权税])}
    when
        $context:DroolsContext()
    then
        FuncEntity func = $context.getFuncEntity("股票期权税");
        String para1 = func.getParameters().get(0);
        String para2 = func.getParameters().get(1);
        double shouldStockTax = (double)$context.getItemValByCode(para1); //当年应纳股票期权税
        double alreadyStockTax = (double)$context.getItemValByCode(para2); //当年应纳股票期权税


        func.setResult(BigDecimal.valueOf(14800.00)); // TODO
end

rule "偶然所得税" // {偶然所得税([偶然所得])}
    when
        $context:DroolsContext()
    then
        FuncEntity func = $context.getFuncEntity("偶然所得税");
        String para1 = func.getParameters().get(0);
        double accidentalIncome = (double)$context.getItemValByCode(para1); //偶然所得

        func.setResult(BigDecimal.valueOf(800.00)); // TODO
end

rule "劳务税" // {劳务税([劳务费])}
    when
        $context:DroolsContext()
    then
        FuncEntity func = $context.getFuncEntity("劳务税");
        String para1 = func.getParameters().get(0);
        double laborCosts = (double)$context.getItemValByCode(para1); //劳务费

        func.setResult(BigDecimal.valueOf(800.00)); // TODO
end

rule "病假扣除比例" // {病假扣除比例([城市],[工龄],[连续工龄],[病假天数],[当年度累计病假天数],[病假基数],[最低工资标准])}
    when
        $context:DroolsContext()
    then
        FuncEntity func = $context.getFuncEntity("病假扣除比例");
        String para1 = func.getParameters().get(0);
        String para2 = func.getParameters().get(1);
        String para3 = func.getParameters().get(2);
        String para4 = func.getParameters().get(3);
        String para5 = func.getParameters().get(4);
        String para6 = func.getParameters().get(5);
        String para7 = func.getParameters().get(6);

        String city = (String)$context.getItemValByCode(para1); // 城市
        double workingAge = (double)$context.getItemValByCode(para2); // 工龄
        double continueAge = (double)$context.getItemValByCode(para3); // 连续工龄
        double sickDays = (double)$context.getItemValByCode(para4); //病假天数
        double AnnualSickDays = (double)$context.getItemValByCode(para5); //当年度累计病假天数
        double sickBase = (double)$context.getItemValByCode(para6); //病假基数
        double minStandard = (double)$context.getItemValByCode(para7); //最低工资标准

        if((city.equals("扬州") || city.equals("上海")) && workingAge < 2){
            func.setResult(BigDecimal.valueOf(0.4));
        }else if((city.equals("扬州") || city.equals("上海")) && workingAge >=2 && workingAge < 4){
            func.setResult(BigDecimal.valueOf(0.3));
        }else if((city.equals("扬州") || city.equals("上海")) && workingAge >=4 && workingAge < 6){
            func.setResult(BigDecimal.valueOf(0.2));
        }else if((city.equals("扬州") || city.equals("上海")) && workingAge >=6 && workingAge < 8){
            func.setResult(BigDecimal.valueOf(0.1));
        }else if((city.equals("扬州") || city.equals("上海")) && workingAge >=8){
            func.setResult(BigDecimal.valueOf(0.0));
        }else if((city.equals("成都")) && continueAge < 10){
            func.setResult(BigDecimal.valueOf(0.3));
        }else if((city.equals("成都")) && continueAge >= 10 && continueAge < 20){
            func.setResult(BigDecimal.valueOf(0.2));
        }else if((city.equals("成都")) && continueAge >= 20 && continueAge < 30){
            func.setResult(BigDecimal.valueOf(0.1));
        }else if((city.equals("成都")) && continueAge >= 30){
             func.setResult(BigDecimal.valueOf(0.05));
        }else if(city.equals("北京") || city.equals("天津") || city.equals("沈阳") || city.equals("广州") || city.equals("武汉")){
             func.setResult(BigDecimal.valueOf(0.2));
        }else if((city.equals("北京") || city.equals("天津") || city.equals("沈阳") || city.equals("广州") || city.equals("武汉"))
                    && AnnualSickDays<=30 && (sickBase/21.75*sickDays*0.7 > minStandard/21.75*sickDays*0.8)){
              func.setResult(BigDecimal.valueOf(0.3));
        }else if(city.equals("西安") || city.equals("济南")){
              func.setResult(BigDecimal.valueOf(0.3));
         }
        else{
            func.setResult(BigDecimal.valueOf(0.00));
        }
end

rule "长病假扣除比例" // {长病假扣除比例([城市],[工龄],[连续工龄]}
    when
        $context:DroolsContext()
    then
        FuncEntity func = $context.getFuncEntity("长病假扣除比例");
        String para1 = func.getParameters().get(0);
        String para2 = func.getParameters().get(1);
        String para3 = func.getParameters().get(2);

        String city = (String)$context.getItemValByCode(para1); // 城市
        double workingAge = (double)$context.getItemValByCode(para2); // 工龄
        double continueAge = (double)$context.getItemValByCode(para3); // 连续工龄

        if((city.equals("扬州") || city.equals("上海")) && workingAge < 1){
            func.setResult(BigDecimal.valueOf(0.6));
        }else if((city.equals("扬州") || city.equals("上海")) && workingAge >=1 && workingAge < 3){
            func.setResult(BigDecimal.valueOf(0.5));
        }else if((city.equals("扬州") || city.equals("上海")) && workingAge >=3){
            func.setResult(BigDecimal.valueOf(0.4));
        }else if((city.equals("成都")) && continueAge < 10){
             func.setResult(BigDecimal.valueOf(0.4));
        }else if((city.equals("成都")) && continueAge >= 10 && continueAge < 20){
             func.setResult(BigDecimal.valueOf(0.35));
        }else if((city.equals("成都")) && continueAge >= 30){
              func.setResult(BigDecimal.valueOf(0.3));
        }else if(city.equals("北京") || city.equals("天津") || city.equals("沈阳") || city.equals("广州") || city.equals("武汉")){
              func.setResult(BigDecimal.valueOf(0.2));
        }else if(city.equals("济南")){
               func.setResult(BigDecimal.valueOf(0.4));
        }else if(city.equals("西安")){
               func.setResult(BigDecimal.valueOf(0.2));
        }
        else{
            func.setResult(BigDecimal.valueOf(0.00));
        }
end

rule "速扣数" // 速扣数([应纳税所得额])
    when
       $context:DroolsContext()
    then
        FuncEntity func = $context.getFuncEntity("速扣数");
        String para1 = func.getParameters().get(0);
        double taxIncome = (double)$context.getItemValByCode(para1); // 应纳税所得额

        func.setResult(BigDecimal.valueOf(taxIncome)); // TODO
end

rule "税率" // 税率([应纳税所得额])
    when
       $context:DroolsContext()
    then
        FuncEntity func = $context.getFuncEntity("税率");
        String para1 = func.getParameters().get(0);
        double taxIncome = (double)$context.getItemValByCode(para1); // 应纳税所得额

        func.setResult(BigDecimal.valueOf(taxIncome)); // TODO
end