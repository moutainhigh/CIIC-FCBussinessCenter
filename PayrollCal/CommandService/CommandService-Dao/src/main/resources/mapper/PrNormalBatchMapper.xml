<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ciicsh.gto.salarymanagementcommandservice.dao.PrNormalBatchMapper">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.ciicsh.gto.salarymanagement.entity.po.PrNormalBatchPO">
		<id column="id" property="id" />
		<result column="code" property="code" />
		<result column="management_id" property="managementId" />
		<result column="is_scheduled" property="isScheduled" />
		<result column="schedule_setting" property="scheduleSetting" />
		<result column="account_set_id" property="accountSetId" />
		<result column="remark" property="remark" />
		<result column="status" property="status" />
		<result column="year_month" property="period" />
		<result column="result_data" property="resultData" />
		<result column="is_impl_cal" property="isImplCal" />
		<result column="is_active" property="isActive" />
		<result column="created_time" property="createdTime" />
		<result column="modified_time" property="modifiedTime" />
		<result column="created_by" property="createdBy" />
		<result column="modified_by" property="modifiedBy" />
	</resultMap>

	<resultMap id="CustBatchResultMap" type="com.ciicsh.gto.salarymanagement.entity.po.custom.PrCustBatchPO" >
		<result column="code" property="code"/>
		<result column="batch_type" property="batchType"/>
		<result column="management_id" property="managementId"/>
		<result column="management_name" property="managementName"/>
		<result column="account_set_code" property="accountSetCode"/>
		<result column="period" property="period"/>
		<result column="actual_period" property="actualPeriod"/>
		<result column="status" property="status"/>
		<result column="start_date" property="beginDate"/>
		<result column="end_date" property="endDate"/>
		<result column="accountSetName" property="accountSetName"/>
		<result column="payroll_period" property="payrollType"/>
		<result column="empGroupName" property="empGroupName"/>
		<result column="emp_group_code" property="empGroupCode"/>
		<result column="group_name" property="prGroupName"/>
		<result column="pr_group_code" property="prGroupCode"/>
		<result column="is_template" property="isTemplate"/>
		<result column="created_by" property="createdBy"/>


	</resultMap>

	<select id="getCustBatchInfo" resultMap="CustBatchResultMap">
		SELECT
		a.code,
		a.management_id,
		a.management_name,
		a.account_set_code,
		c.emp_group_code
		FROM
			  pr_normal_batch a, normal_batch_view b,pr_emp_group c
		where
			  a.code = #{batchCode}
			  AND a.account_set_code = b.account_set_code
			  and b.emp_group_code = c.emp_group_code
			  and c.is_active = 1

	</select>

	<select id="selectBatchListByUseLike" parameterType="com.ciicsh.gto.salarymanagement.entity.po.custom.PrCustBatchPO" resultMap="CustBatchResultMap">

		SELECT * from ( SELECT
		a.code,
		1 as batch_type,
		a.management_id,
		a.management_name,
		a.account_set_code,
		a.period,
		a.actual_period,
		a.status,
		a.start_date,
		a.end_date,
		a.created_time,
		a.created_by,
		b.account_set_name as accountSetName,
		b.payroll_period,
		c.name as empGroupName,
		b.pr_group_code,
		b.is_template,
		c.emp_group_code,
		b.group_name
		FROM
			  pr_normal_batch a , normal_batch_view b, pr_emp_group c
		where
			  a.account_set_code = b.account_set_code
			  and b.emp_group_code = c.emp_group_code
			  and c.is_active = 1

		    <if test="period != null and period !=''">
				AND a.period = #{period}
			</if>
			<if test="managementId != null and managementId !=''">
				AND a.management_id IN (${managementId})
			</if>
			<if test="status != 0">
				AND a.status = #{status}
			</if>
			<if test="accountSetName != null and accountSetName != ''">
				AND b.account_set_name LIKE concat(#{accountSetName},'%')
			</if>
			<if test="empGroupName != null and empGroupName !=''">
				AND c.name LIKE concat(#{empGroupName},'%')
			</if>
			<if test="code != null and code != ''">
				AND code LIKE concat(#{code},'%')
			</if>

		UNION
		SELECT
		a.code,
		2 as batch_type,
		a.management_id,
		a.management_name,
		a.account_set_code,
		a.period,
		a.actual_period,
		a.status,
		a.start_date,
		a.end_date,
		a.created_time,
		a.created_by,
		b.account_set_name as accountSetName,
		b.payroll_period,
		c.name as empGroupName,
		b.pr_group_code,
		b.is_template,
		c.emp_group_code,
		b.group_name
		FROM
		pr_normal_batch a , normal_batch_view b, pr_emp_group c
		where
		a.account_set_code = b.account_set_code
		and b.emp_group_code = c.emp_group_code
		and c.is_active = 1

		<if test="period != null and period !=''">
			AND a.period = #{period}
		</if>
		<if test="managementId != null and managementId !=''">
			AND a.management_id IN (${managementId})
		</if>
		<if test="accountSetName != null and accountSetName != ''">
			AND b.account_set_name LIKE concat(#{accountSetName},'%')
		</if>
		<if test="empGroupName != null and empGroupName !=''">
			AND c.name LIKE concat(#{empGroupName},'%')
		</if>
		<if test="code != null and code != '' and status == 0" >
			AND a.code in (SELECT DISTINCT origin_batch_code FROM pr_adjust_batch WHERE adjust_batch_code LIKE concat(#{code},'%'))
		</if>
		<if test="code != null and code != '' and status != 0" >
			AND a.code in (SELECT DISTINCT origin_batch_code FROM pr_adjust_batch WHERE status=#{status} and adjust_batch_code LIKE concat(#{code},'%'))
		</if>
		<if test="(code == null or code == '') and status == 0">
			AND a.code in (SELECT DISTINCT origin_batch_code FROM pr_adjust_batch)
		</if>
		<if test="(code == null or code == '') and status != 0">
			AND a.code in (SELECT DISTINCT origin_batch_code FROM pr_adjust_batch WHERE status=#{status})
		</if>

	UNION
		SELECT
		a.code,
		3 as batch_type,
		a.management_id,
		a.management_name,
		a.account_set_code,
		a.period,
		a.actual_period,
		a.status,
		a.start_date,
		a.end_date,
		a.created_time,
		a.created_by,
		b.account_set_name as accountSetName,
		b.payroll_period,
		c.name as empGroupName,
		b.pr_group_code,
		b.is_template,
		c.emp_group_code,
		b.group_name
		FROM
		pr_normal_batch a , normal_batch_view b, pr_emp_group c
		where
		a.account_set_code = b.account_set_code
		and b.emp_group_code = c.emp_group_code
		and c.is_active = 1
		<if test="period != null and period !=''" >
			AND a.period = #{period}
		</if>
		<if test="managementId != null and managementId !=''">
			AND a.management_id IN (${managementId})
		</if>
		<if test="status != 0">
			AND a.code in (SELECT DISTINCT origin_batch_code FROM pr_back_tracking_batch WHERE status=#{status})
		</if>
		<if test="status == 0">
			AND a.code in (SELECT DISTINCT origin_batch_code FROM pr_back_tracking_batch)
		</if>
		<if test="accountSetName != null and accountSetName != ''">
			AND b.account_set_name LIKE concat(#{accountSetName},'%')
		</if>
		<if test="empGroupName != null and empGroupName !=''">
			AND c.name LIKE concat(#{empGroupName},'%')
		</if>
		<if test="code != null and code != '' and status == 0">
			AND a.code in (SELECT DISTINCT origin_batch_code FROM pr_back_tracking_batch WHERE back_tracking_batch_code LIKE concat(#{code},'%'))
		</if>
		<if test="code != null and code != '' and status != 0">
			AND a.code in (SELECT DISTINCT origin_batch_code FROM pr_back_tracking_batch WHERE status=#{status} AND back_tracking_batch_code LIKE concat(#{code},'%'))
		</if>
		<if test="(code == null or code == '') and status != 0">
			AND a.code in (SELECT DISTINCT origin_batch_code FROM pr_back_tracking_batch WHERE status=#{status})
		</if>
		<if test="(code == null or code == '') and status == 0">
			AND a.code in (SELECT DISTINCT origin_batch_code FROM pr_back_tracking_batch)
		</if> ) result

		ORDER by result.created_time desc

	</select>


	<resultMap id="CustSubBatchMap" type="com.ciicsh.gto.salarymanagement.entity.po.custom.PrCustSubBatchPO" >
		<result column="code" property="code"/>
		<result column="originCode" property="originCode"/>
		<result column="batch_type" property="batchType"/>
		<result column="status" property="status"/>
	</resultMap>

	<select id="selectSubBatchList" resultMap="CustSubBatchMap">
		SELECT
			adjust_batch_code as code,
			origin_batch_code as originCode,
			2 as batch_type,
			status
		FROM
			pr_adjust_batch
		where
			root_batch_code = #{code}
		UNION
		SELECT
			back_tracking_batch_code as code,
			origin_batch_code as originCode,
			3 as batch_type,
			status
		FROM
			pr_back_tracking_batch
		where
			root_batch_code = #{code}
	</select>


	<insert id="insertNormalBatch" parameterType="com.ciicsh.gto.salarymanagement.entity.po.PrNormalBatchPO">
		INSERT INTO pr_normal_batch(
		<include refid="pr_normal_batch_insert_columns" />
		)
		SELECT
		#{code},
		#{managementId},
		#{managementName},
		#{accountSetCode},
		#{period},
		#{actualPeriod},
		#{remark},
		#{status},
		#{createdBy},
		#{modifiedBy},
		#{startDate},
		#{endDate}
		FROM DUAL WHERE NOT EXISTS(
		SELECT management_id
		FROM pr_normal_batch
		WHERE management_id = #{managementId} AND account_set_code=#{accountSetCode} AND period=#{period}
		)
	</insert>

	<update id="updateNormalBatch" parameterType="com.ciicsh.gto.salarymanagement.entity.po.PrNormalBatchPO">
		UPDATE pr_normal_batch
		SET
		<if test="period != null">
			period = #{period},
		</if>
		<if test="managementId != null">
			management_id = #{managementId},
			management_name = #{managementName},
		</if>
		<if test="accountSetCode != null">
			account_set_code = #{accountSetCode},
			actual_period = #{actualPeriod},
			start_date = #{startDate},
			end_date = #{endDate},
		</if>
		<if test="advancePeriod != null">
			advance_period = #{advancePeriod},
		</if>
		<if test="status !=0 and status != null">
			status = #{status},
		</if>
		<if test="hasAdvance !=0">
			has_advance = #{hasAdvance},
		</if>
		<if test="hasMoney !=0">
			has_money = #{hasMoney},
		</if>
		<if test="advanceDay !=0">
			advance_day = #{advanceDay},
		</if>
		<if test="resultData != '' and resultData != null">
			result_data = #{resultData},
		</if>
		modified_by = #{modifiedBy},
		modified_time = sysdate()
		WHERE code = #{code}
	</update>

	<sql id="pr_normal_batch_insert_columns">
		code,
		management_id,
		management_name,
		account_set_code,
		period,
		actual_period,
		remark,
		status,
		created_by,
		modified_by,
		start_date,
		end_date
	</sql>

	<delete id="deleteBatchByCodes">
		DELETE FROM pr_normal_batch
		WHERE
		status = 1
		AND
		code IN
		<foreach item="item" index="index" collection="codes"
				 open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<update id="auditBatch">
		UPDATE
		pr_normal_batch
		SET
		status = #{status},
		comments = #{comments},
		<if test="result != '' and result != null">
			result_data = #{result},
		</if>
		modified_by = #{modifiedBy},
		modified_time = sysdate()
		WHERE code = #{code}
	</update>

	<update id="updateHasAdvance">
		UPDATE
		pr_normal_batch
		SET
		has_advance = #{hasAdvance},
		modified_by = #{modifiedBy},
		modified_time = sysdate()
		WHERE code IN
		<foreach item="item" index="index" collection="codes"
				 open="(" separator="," close=")">
			#{item}
		</foreach>
		;

		UPDATE
		pr_adjust_batch
		SET
		has_advance = #{hasAdvance},
		modified_by = #{modifiedBy},
		modified_time = sysdate()
		WHERE adjust_batch_code IN
		<foreach item="item" index="index" collection="codes"
				 open="(" separator="," close=")">
			#{item}
		</foreach>
		;

		UPDATE
		pr_back_tracking_batch
		SET
		has_advance = #{hasAdvance},
		modified_by = #{modifiedBy},
		modified_time = sysdate()
		WHERE back_tracking_batch_code  IN
		<foreach item="item" index="index" collection="codes"
				 open="(" separator="," close=")">
			#{item}
		</foreach>

	</update>

	<update id="updateHasMoney">
		UPDATE
		pr_normal_batch
		SET
		has_money = #{hasMoney},
		modified_by = #{modifiedBy},
		modified_time = sysdate()
		WHERE code IN
		<foreach item="item" index="index" collection="codes"
				 open="(" separator="," close=")">
			#{item}
		</foreach>
		;

		UPDATE
		pr_adjust_batch
		SET
		has_money = #{hasMoney},
		modified_by = #{modifiedBy},
		modified_time = sysdate()
		WHERE adjust_batch_code IN
		<foreach item="item" index="index" collection="codes"
				 open="(" separator="," close=")">
			#{item}
		</foreach>
		;

		UPDATE
		pr_back_tracking_batch
		SET
		has_money = #{hasMoney},
		modified_by = #{modifiedBy},
		modified_time = sysdate()
		WHERE back_tracking_batch_code  IN
		<foreach item="item" index="index" collection="codes"
				 open="(" separator="," close=")">
			#{item}
		</foreach>

	</update>

	<select id="selectAllBatchCodesByManagementId" resultType="com.ciicsh.gto.salarymanagement.entity.po.PrNormalBatchPO">
		SELECT
			code,
			actual_period,
            management_id,
            management_name,
            has_money,
			advance_day,
			has_advance,
			advance_period,
			status,
            created_time
		FROM
			pr_normal_batch
		WHERE
			1=1
			<if test="managementId != '' and managementId != null">
			   AND management_id = #{managementId}
			</if>
            <if test="batchCode != '' and batchCode != null">
               AND code LIKE concat('%', #{batchCode})
            </if>

		UNION

		SELECT
			ab.adjust_batch_code as code,
			nb.actual_period,
            nb.management_id,
            nb.management_name,
            ab.has_money,
			ab.advance_day,
			ab.has_advance,
			ab.advance_period,
			ab.status,
            ab.created_time
		FROM
			pr_adjust_batch ab
			JOIN pr_normal_batch nb
			ON nb.code = ab.root_batch_code
		WHERE
			1=1
			<if test="managementId != '' and managementId != null">
				AND nb.management_id = #{managementId}
			</if>
            <if test="batchCode != '' and batchCode != null">
                AND ab.adjust_batch_code LIKE concat('%', #{batchCode})
            </if>

		UNION

		SELECT
			btb.back_tracking_batch_code as code,
			nb.actual_period,
            nb.management_id,
            nb.management_name,
            btb.has_money,
			btb.advance_day,
			btb.has_advance,
			btb.advance_period,
			btb.status,
            btb.created_time
		FROM
			pr_back_tracking_batch btb
			JOIN pr_normal_batch nb
			ON nb.code = btb.root_batch_code
		WHERE
			1=1
			<if test="managementId != '' and managementId != null">
				AND nb.management_id = #{managementId}
			</if>
            <if test="batchCode != '' and batchCode != null">
                AND btb.back_tracking_batch_code LIKE concat('%', #{batchCode})
            </if>
	</select>

	<select id="selectBatchPayrollSchema" resultType="com.ciicsh.gto.salarymanagement.entity.po.PrPayrollItemPO">

        SELECT
            ppi.item_code,
            ppi.item_name
        FROM
            pr_normal_batch pnb
        LEFT JOIN pr_payroll_account_set ppas
        ON pnb.account_set_code = ppas.account_set_code
        LEFT JOIN pr_payroll_item ppi
        ON ppas.payroll_group_code = ppi.payroll_group_code
        OR (
            ppas.payroll_group_template_code = ppi.payroll_group_template_code
            AND
            <![CDATA[ppas.payroll_group_template_code <> '' ]]>
        )
		WHERE
		    pnb.code = #{batchCode}

		UNION

		SELECT
            ppi.item_code,
            ppi.item_name
        FROM
            pr_adjust_batch pab
        LEFT JOIN pr_normal_batch pnb
        ON pab.root_batch_code = pnb.code
        LEFT JOIN pr_payroll_account_set ppas
        ON pnb.account_set_code = ppas.account_set_code
        LEFT JOIN pr_payroll_item ppi
        ON ppas.payroll_group_code = ppi.payroll_group_code
        OR (
            ppas.payroll_group_template_code = ppi.payroll_group_template_code
            AND
            <![CDATA[ppas.payroll_group_template_code <> '' ]]>
        )
		WHERE
		    pab.adjust_batch_code = #{batchCode}

		UNION

		SELECT
            ppi.item_code,
            ppi.item_name
        FROM
            pr_back_tracking_batch pbtb
        LEFT JOIN pr_normal_batch pnb
        ON pbtb.root_batch_code = pnb.code
        LEFT JOIN pr_payroll_account_set ppas
        ON pnb.account_set_code = ppas.account_set_code
        LEFT JOIN pr_payroll_item ppi
        ON ppas.payroll_group_code = ppi.payroll_group_code
        OR (
            ppas.payroll_group_template_code = ppi.payroll_group_template_code
            AND
            <![CDATA[ppas.payroll_group_template_code <> '' ]]>
        )
		WHERE
		    pbtb.back_tracking_batch_code = #{batchCode}



	</select>

	<select id="getBatchIdListByManagementId" resultType="java.lang.String">
		SELECT
		code
		FROM
		pr_normal_batch
		WHERE
		has_advance = 0 AND has_money =0 AND status = 7
		<if test="managementId != '' and managementId != null">
			AND management_id = #{managementId}
		</if>

		UNION

		SELECT
		ab.adjust_batch_code as code
		FROM
		pr_adjust_batch ab
		JOIN pr_normal_batch nb
		ON nb.code = ab.root_batch_code
		WHERE
		ab.has_advance = 0 AND ab.has_money =0 AND ab.status = 7
		<if test="managementId != '' and managementId != null">
			AND nb.management_id = #{managementId}
		</if>

		UNION

		SELECT
		btb.back_tracking_batch_code as code
		FROM
		pr_back_tracking_batch btb
		JOIN pr_normal_batch nb
		ON nb.code = btb.root_batch_code
		WHERE
		btb.has_advance = 0 AND btb.has_money =0 AND btb.status = 7
		<if test="managementId != '' and managementId != null">
			AND nb.management_id = #{managementId}
		</if>
	</select>

	<select id="getHistoryBatchInfoList" resultType="com.ciicsh.gto.salarymanagement.entity.po.PrNormalBatchPO">
		SELECT
		code,
		account_set_code,
		management_id
		FROM
		pr_normal_batch

		WHERE management_id IN
		<foreach item="item" index="index" collection="mgrIds"
				 open="(" separator="," close=")">
			#{item}
		</foreach>

	</select>

</mapper>
