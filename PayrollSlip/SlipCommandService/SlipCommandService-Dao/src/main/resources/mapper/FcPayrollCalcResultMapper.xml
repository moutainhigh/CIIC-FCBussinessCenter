<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ciicsh.gto.fcbusinesscenter.slipcommandservice.dao.FcPayrollCalcResultMapper">

    <resultMap id="BaseResultMap" type="com.ciicsh.gto.fcbusinesscenter.slipcommandservice.entity.po.FcPayrollCalcResultPO">
        <id column="fc_payroll_calc_result_id" property="fcPayrollCalcResultId" />
        <result column="emp_id" property="empId" />
        <result column="emp_name" property="empName" />
        <result column="payroll_type" property="payrollType" />
        <result column="department" property="department" />
        <result column="country_code" property="countryCode" />
        <result column="batch_id" property="batchId" />
        <result column="ref_batch_id" property="refBatchId" />
        <result column="leaving_years" property="leavingYears" />
        <result column="personnel_income_net_pay" property="personnelIncomeNetPay" />
        <result column="personnel_income_tax" property="personnelIncomeTax" />
        <result column="personnel_income_wage_before_tax" property="personnelIncomeWageBeforeTax" />
        <result column="personnel_income_wage_after_tax" property="personnelIncomeWageAfterTax" />
        <result column="personnel_income_yearly_bonus_before_tax" property="personnelIncomeYearlyBonusBeforeTax" />
        <result column="personnel_income_yearly_bonus_after_tax" property="personnelIncomeYearlyBonusAfterTax" />
        <result column="personnel_income_labor_before_tax" property="personnelIncomeLaborBeforeTax" />
        <result column="personnel_income_labor_after_tax" property="personnelIncomeLaborAfterTax" />
        <result column="personnel_income_accident_before_tax" property="personnelIncomeAccidentBeforeTax" />
        <result column="personnel_income_accident_after_tax" property="personnelIncomeAccidentAfterTax" />
        <result column="personnel_income_disposable_compension_before_tax" property="personnelIncomeDisposableCompensionBeforeTax" />
        <result column="personnel_income_disposable_compension_after_tax" property="personnelIncomeDisposableCompensionAfterTax" />
        <result column="personnel_income_interest_before_tax" property="personnelIncomeInterestBeforeTax" />
        <result column="personnel_income_interest_after_tax" property="personnelIncomeInterestAfterTax" />
        <result column="personnel_income_stock_option_before_tax" property="personnelIncomeStockOptionBeforeTax" />
        <result column="personnel_income_stock_option_after_tax" property="personnelIncomeStockOptionAfterTax" />
        <result column="personnel_income_property_transfer_before_tax" property="personnelIncomePropertyTransferBeforeTax" />
        <result column="personnel_income_property_transfer_after_tax" property="personnelIncomePropertyTransferAfterTax" />
        <result column="personnel_social_security" property="personnelSocialSecurity" />
        <result column="personnel_provident_fund" property="personnelProvidentFund" />
        <result column="personnel_income_year_month" property="personnelIncomeYearMonth" />
        <result column="personnel_tax_exemption" property="personnelTaxExemption" />
        <result column="tax_year_month" property="taxYearMonth" />
        <result column="annuity" property="annuity" />
        <result column="contract_first_party" property="contractFirstParty" />
        <result column="salary_calc_result_items" property="salaryCalcResultItems" />
        <result column="employee_service_agreement" property="employeeServiceAgreement" />
        <result column="remark" property="remark" />
        <result column="is_active" property="isActive" />
        <result column="created_by" property="createdBy" />
        <result column="created_time" property="createdTime" />
        <result column="modified_by" property="modifiedBy" />
        <result column="modified_time" property="modifiedTime" />
    </resultMap>

    <select id="total"  resultType="int">
        SELECT COUNT(*) FROM fc_payroll_calc_result
        WHERE is_active = 1
    </select>

    <select id="all"  resultMap="BaseResultMap">
        SELECT *
        FROM fc_payroll_calc_result
        WHERE is_active = 1
    </select>

    <select id="get"  resultMap="BaseResultMap">
        SELECT *
        FROM fc_payroll_calc_result
        where fc_payroll_calc_result_id = #{fcPayrollCalcResultId}
        LIMIT 1
    </select>

    <select id="last"  resultMap="BaseResultMap">
        SELECT *
        FROM fc_payroll_calc_result
        ORDER by fc_payroll_calc_result_id desc
        LIMIT 1;
    </select>

    <insert id="insert" parameterType="map">
    INSERT INTO fc_payroll_calc_result(emp_id, emp_name, payroll_type, department, country_code, batch_id, ref_batch_id, leaving_years, personnel_income_net_pay, personnel_income_tax, personnel_income_wage_before_tax, personnel_income_wage_after_tax, personnel_income_yearly_bonus_before_tax, personnel_income_yearly_bonus_after_tax, personnel_income_labor_before_tax, personnel_income_labor_after_tax, personnel_income_accident_before_tax, personnel_income_accident_after_tax, personnel_income_disposable_compension_before_tax, personnel_income_disposable_compension_after_tax, personnel_income_interest_before_tax, personnel_income_interest_after_tax, personnel_income_stock_option_before_tax, personnel_income_stock_option_after_tax, personnel_income_property_transfer_before_tax, personnel_income_property_transfer_after_tax, personnel_social_security, personnel_provident_fund, personnel_income_year_month, personnel_tax_exemption, tax_year_month, annuity, contract_first_party, salary_calc_result_items, employee_service_agreement, remark, created_by, modified_by)
    VALUES (#{empId}, #{empName}, #{payrollType}, #{department}, #{countryCode}, #{batchId}, #{refBatchId}, #{leavingYears}, #{personnelIncomeNetPay}, #{personnelIncomeTax}, #{personnelIncomeWageBeforeTax}, #{personnelIncomeWageAfterTax}, #{personnelIncomeYearlyBonusBeforeTax}, #{personnelIncomeYearlyBonusAfterTax}, #{personnelIncomeLaborBeforeTax}, #{personnelIncomeLaborAfterTax}, #{personnelIncomeAccidentBeforeTax}, #{personnelIncomeAccidentAfterTax}, #{personnelIncomeDisposableCompensionBeforeTax}, #{personnelIncomeDisposableCompensionAfterTax}, #{personnelIncomeInterestBeforeTax}, #{personnelIncomeInterestAfterTax}, #{personnelIncomeStockOptionBeforeTax}, #{personnelIncomeStockOptionAfterTax}, #{personnelIncomePropertyTransferBeforeTax}, #{personnelIncomePropertyTransferAfterTax}, #{personnelSocialSecurity}, #{personnelProvidentFund}, #{personnelIncomeYearMonth}, #{personnelTaxExemption}, #{taxYearMonth}, #{annuity}, #{contractFirstParty}, #{salaryCalcResultItems}, #{employeeServiceAgreement}, #{remark}, #{createdBy}, #{modifiedBy})
  </insert>

    <update id="update" parameterType="map">
        UPDATE fc_payroll_calc_result
        SET modified_time = CURRENT_TIMESTAMP,
        <trim suffixOverrides=",">
            <if test="empId != null and empId != ''">
                emp_id = #{empId},
            </if>
            <if test="empName != null and empName != ''">
                emp_name = #{empName},
            </if>
            <if test="payrollType != null and payrollType != ''">
                payroll_type = #{payrollType},
            </if>
            <if test="department != null and department != ''">
                department = #{department},
            </if>
            <if test="countryCode != null and countryCode != ''">
                country_code = #{countryCode},
            </if>
            <if test="batchId != null and batchId != ''">
                batch_id = #{batchId},
            </if>
            <if test="refBatchId != null and refBatchId != ''">
                ref_batch_id = #{refBatchId},
            </if>
            <if test="leavingYears != null and leavingYears != ''">
                leaving_years = #{leavingYears},
            </if>
            <if test="personnelIncomeNetPay != null and personnelIncomeNetPay != ''">
                personnel_income_net_pay = #{personnelIncomeNetPay},
            </if>
            <if test="personnelIncomeTax != null and personnelIncomeTax != ''">
                personnel_income_tax = #{personnelIncomeTax},
            </if>
            <if test="personnelIncomeWageBeforeTax != null and personnelIncomeWageBeforeTax != ''">
                personnel_income_wage_before_tax = #{personnelIncomeWageBeforeTax},
            </if>
            <if test="personnelIncomeWageAfterTax != null and personnelIncomeWageAfterTax != ''">
                personnel_income_wage_after_tax = #{personnelIncomeWageAfterTax},
            </if>
            <if test="personnelIncomeYearlyBonusBeforeTax != null and personnelIncomeYearlyBonusBeforeTax != ''">
                personnel_income_yearly_bonus_before_tax = #{personnelIncomeYearlyBonusBeforeTax},
            </if>
            <if test="personnelIncomeYearlyBonusAfterTax != null and personnelIncomeYearlyBonusAfterTax != ''">
                personnel_income_yearly_bonus_after_tax = #{personnelIncomeYearlyBonusAfterTax},
            </if>
            <if test="personnelIncomeLaborBeforeTax != null and personnelIncomeLaborBeforeTax != ''">
                personnel_income_labor_before_tax = #{personnelIncomeLaborBeforeTax},
            </if>
            <if test="personnelIncomeLaborAfterTax != null and personnelIncomeLaborAfterTax != ''">
                personnel_income_labor_after_tax = #{personnelIncomeLaborAfterTax},
            </if>
            <if test="personnelIncomeAccidentBeforeTax != null and personnelIncomeAccidentBeforeTax != ''">
                personnel_income_accident_before_tax = #{personnelIncomeAccidentBeforeTax},
            </if>
            <if test="personnelIncomeAccidentAfterTax != null and personnelIncomeAccidentAfterTax != ''">
                personnel_income_accident_after_tax = #{personnelIncomeAccidentAfterTax},
            </if>
            <if test="personnelIncomeDisposableCompensionBeforeTax != null and personnelIncomeDisposableCompensionBeforeTax != ''">
                personnel_income_disposable_compension_before_tax = #{personnelIncomeDisposableCompensionBeforeTax},
            </if>
            <if test="personnelIncomeDisposableCompensionAfterTax != null and personnelIncomeDisposableCompensionAfterTax != ''">
                personnel_income_disposable_compension_after_tax = #{personnelIncomeDisposableCompensionAfterTax},
            </if>
            <if test="personnelIncomeInterestBeforeTax != null and personnelIncomeInterestBeforeTax != ''">
                personnel_income_interest_before_tax = #{personnelIncomeInterestBeforeTax},
            </if>
            <if test="personnelIncomeInterestAfterTax != null and personnelIncomeInterestAfterTax != ''">
                personnel_income_interest_after_tax = #{personnelIncomeInterestAfterTax},
            </if>
            <if test="personnelIncomeStockOptionBeforeTax != null and personnelIncomeStockOptionBeforeTax != ''">
                personnel_income_stock_option_before_tax = #{personnelIncomeStockOptionBeforeTax},
            </if>
            <if test="personnelIncomeStockOptionAfterTax != null and personnelIncomeStockOptionAfterTax != ''">
                personnel_income_stock_option_after_tax = #{personnelIncomeStockOptionAfterTax},
            </if>
            <if test="personnelIncomePropertyTransferBeforeTax != null and personnelIncomePropertyTransferBeforeTax != ''">
                personnel_income_property_transfer_before_tax = #{personnelIncomePropertyTransferBeforeTax},
            </if>
            <if test="personnelIncomePropertyTransferAfterTax != null and personnelIncomePropertyTransferAfterTax != ''">
                personnel_income_property_transfer_after_tax = #{personnelIncomePropertyTransferAfterTax},
            </if>
            <if test="personnelSocialSecurity != null and personnelSocialSecurity != ''">
                personnel_social_security = #{personnelSocialSecurity},
            </if>
            <if test="personnelProvidentFund != null and personnelProvidentFund != ''">
                personnel_provident_fund = #{personnelProvidentFund},
            </if>
            <if test="personnelIncomeYearMonth != null and personnelIncomeYearMonth != ''">
                personnel_income_year_month = #{personnelIncomeYearMonth},
            </if>
            <if test="personnelTaxExemption != null and personnelTaxExemption != ''">
                personnel_tax_exemption = #{personnelTaxExemption},
            </if>
            <if test="taxYearMonth != null and taxYearMonth != ''">
                tax_year_month = #{taxYearMonth},
            </if>
            <if test="annuity != null and annuity != ''">
                annuity = #{annuity},
            </if>
            <if test="contractFirstParty != null and contractFirstParty != ''">
                contract_first_party = #{contractFirstParty},
            </if>
            <if test="salaryCalcResultItems != null and salaryCalcResultItems != ''">
                salary_calc_result_items = #{salaryCalcResultItems},
            </if>
            <if test="employeeServiceAgreement != null and employeeServiceAgreement != ''">
                employee_service_agreement = #{employeeServiceAgreement},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
            <if test="isActive != null">
                is_active = #{isActive},
            </if>
            <if test="modifiedBy != null and modifiedBy != ''">
                modified_by = #{modifiedBy},
            </if>

        </trim>
        WHERE fc_payroll_calc_result_id = #{fcPayrollCalcResultId}
    </update>

    <select id="list"  resultMap="BaseResultMap">
        SELECT *
        FROM fc_payroll_calc_result
        WHERE is_active = 1
        <if test="empId != null and empId != ''">
            and emp_id = #{empId}
        </if>
        <if test="batchId != null and batchId != ''">
            and batch_id = #{batchId}
        </if>
        ORDER BY fc_payroll_calc_result_id DESC
        <if test="limit != null and limit != ''">
            LIMIT #{limit}
        </if>
        <if test="offset != null and offset != ''">
            OFFSET #{offset}
        </if>
    </select>

    <select id="listBatchIds"  resultMap="BaseResultMap">
        SELECT distinct(batch_id), personnel_income_year_month
        FROM fc_payroll_calc_result
        WHERE is_active = 1
        ORDER BY batch_id

    </select>

    <select id="listPayrollTypes"  resultMap="BaseResultMap">
        SELECT distinct(payroll_type)
        FROM fc_payroll_calc_result
        WHERE batch_id = #{batchId}
        ORDER BY payroll_type

    </select>

</mapper>
