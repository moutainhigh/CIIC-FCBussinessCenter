<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ciicsh.zorro.leopardwebservice.dao.IPrEmployeeGroupMapper">

    <resultMap id="PrEmployeeGroupMap" type="PrEmployeeGroupEntity">
        <id property="entityId" javaType="String" column="PREmployeeGroupId"/>
        <result property="code" column="PREmployeeGroupCode" />
        <result property="managementId" column="ManagementId" />
        <result property="companyId" column="CompanyId" />
        <result property="name" column="PREmployeeGroupName" />
        <result property="remark" column="Remark" />
        <result property="isActive" column="IsActive" />
        <result property="dataChangeCreateTime" column="DataChange_CreateTime" />
        <result property="dataChangeLastTime" column="DataChange_LastTime" />
        <result property="createdBy" column="CreatedBy" />
        <result property="modifiedBy" column="ModifiedBy" />
        <collection property="employeeList" ofType="PrEmployeeEntity">
            <result property="employeeId" column="EmployeeID" />
            <result property="employeeName" column="EmployeeName" />
            <result property="employeeNameEn" column="EmployeeNameE" />
            <result property="formerName" column="FormerName" />
            <result property="gender" column="Gender" />
            <result property="birthday" column="Birthday" />
            <result property="certificateType" column="CertificateTy" />
            <result property="certificateNumber" column="CertificateNu" />
            <result property="countryCode" column="CountryCode" />
            <result property="provinceCode" column="ProvinceCode" />
            <result property="cityCode" column="CityCode" />
            <result property="isHKMT" column="IsHKMT" />
            <result property="personalProperty" column="PersonalPrope" />
            <result property="archiveLocation" column="ArchiveLocati" />
            <result property="marriage" column="Marriage" />
            <result property="marriageDate" column="MarriageDate" />
            <result property="childrenNumber" column="ChildrenNumbe" />
            <result property="departName" column="DepartName" />
            <result property="position" column="Position" />
            <result property="onBoardDate" column="OnBoardDate" />
        </collection>
    </resultMap>

    <select id="selectList" parameterType="PrEmployeeGroupEntity" resultType="PrEmployeeGroupEntity">
        SELECT
        <include refid="PrEmployeeGroup_All_Columns" />
        FROM
        PR_EmployeeGroup
        <include refid="whereQuery" />
    </select>

    <select id="selectItemById" parameterType="PrEmployeeGroupEntity" resultMap="PrEmployeeGroupMap">
        SELECT
            empg.PREmployeeGroupId,
            empg.PREmployeeGroupCode,
            empg.ManagementId,
            empg.CompanyId,
            empg.PREmployeeGroupName,
            emp.EmployeeID,
            emp.EmployeeName,
            emp.EmployeeNameEn,
            emp.FormerName,
            emp.Gender,
            emp.Birthday,
            emp.CertificateType,
            emp.CertificateNumber,
            emp.CountryCode,
            emp.ProvinceCode,
            emp.CityCode,
            emp.IsHKMT,
            emp.PersonalProperty,
            emp.ArchiveLocation,
            emp.Marriage,
            emp.MarriageDate,
            emp.ChildrenNumber,
            emp.DepartName,
            emp.Position,
            emp.OnBoardDate,
            empg.Remark,
            empg.IsActive,
            empg.DataChange_CreateTime,
            empg.DataChange_LastTime,
            empg.CreatedBy,
            empg.ModifiedBy
        FROM
            PR_EmployeeGroup empg,
            PR_Employee emp,
            PR_EmpGroupEmployeeRelation empgr
        WHERE
            empg.PREmployeeGroupId = empgr.PREmployeeGroupId
        AND
            emp.EmployeeID = empgr.EmployeeId
        AND
            empg.PREmployeeGroupId = #{entityId}
    </select>

    <select id="selectNameList" resultType="String">
        SELECT
            PREmployeeGroupName as 'name'
        FROM
            PR_EmployeeGroup
        WHERE
            ManagementId = #{managementId}
        AND
            CompanyId = #{companyId}
    </select>

    <!--插入薪资项模板-->
    <insert id="insertItem" parameterType="com.ciicsh.zorro.leopardwebservice.entity.PrEmployeeGroupEntity">
        INSERT INTO PR_EmployeeGroup(
        <include refid="PrEmployeeGroup_All_Insert_Columns" />
        )
        VALUES
        (
        #{entityId},
        #{code},
        #{managementId},
        #{companyId},
        #{name},
        #{remark},
        1,
        sysdate(),
        sysdate(),
        #{createdBy},
        #{modifiedBy}
        )
    </insert>

    <insert id="insertRelationList" parameterType="PrEmployeeGroupEntity">
        INSERT INTO PR_EmpGroupEmployeeRelation(
        <include refid="PR_EmpGroupEmployeeRelation_All_Insert_Columns" />
        )
        VALUES
        <foreach collection="employeeList" item="emp" index="index" separator=",">
            (
            #{entityId},
            #{emp.employeeId},
            #{emp.departName},
            #{emp.position},
            #{emp.onBoardDate},
            #{remark},
            1,
            sysdate(),
            sysdate(),
            #{createdBy},
            #{modifiedBy}
            )
        </foreach>
    </insert>

    <update id="updateItemById" parameterType="PrEmployeeGroupEntity">
        UPDATE
          PR_EmployeeGroup
        SET
            <if test="managementId != null">
                ManagementId = #{managementId},
            </if>
            <if test="companyId != null">
                CompanyId = #{companyId},
            </if>
            <if test="name != null">
                PREmployeeGroupName = #{name},
            </if>
            <if test="remark != null">
                Remark = #{remark},
            </if>
            <if test="isActive != null">
                IsActive = #{isActive},
            </if>
            <if test="modifiedBy != null">
                ModifiedBy = #{modifiedBy},
            </if>
            DataChange_LastTime = sysdate()
        WHERE
          PREmployeeGroupId = #{entityId}
    </update>

    <delete id="deleteRelationByEmpGroupId" parameterType="String">
        DELETE FROM
            PR_EmpGroupEmployeeRelation
        WHERE
            PREmployeeGroupId = #{empGroupId}
    </delete>

    <sql id="PR_EmpGroupEmployeeRelation_All_Insert_Columns">
        PREmployeeGroupId,
        EmployeeId,
        DepartName,
        Position,
        OnBoardDate,
        Remark,
        IsActive,
        DataChange_CreateTime,
        DataChange_LastTime,
        CreatedBy,
        ModifiedBy
    </sql>

    <sql id="PrEmployeeGroup_All_Columns">
        PREmployeeGroupId as entityId,
        PREmployeeGroupCode as 'code',
        ManagementId as managementId,
        CompanyId as companyId,
        PREmployeeGroupName as 'name',
        Remark,
        IsActive,
        DataChange_CreateTime,
        DataChange_LastTime,
        CreatedBy,
        ModifiedBy
    </sql>

    <sql id="PrEmployeeGroup_All_Insert_Columns">
        PREmployeeGroupId,
        PREmployeeGroupCode,
        ManagementId,
        CompanyId,
        PREmployeeGroupName,
        Remark,
        IsActive,
        DataChange_CreateTime,
        DataChange_LastTime,
        CreatedBy,
        ModifiedBy
    </sql>

    <sql id="whereQuery">
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="entityId != null and entityId != ''">
                AND PREmployeeGroupId = #{entityId}
            </if>
            <if test="code != null and code !=''">
                AND PREmployeeGroupCode = #{code}
            </if>
            <if test="managementId != null and managementId != ''">
                AND ManagementId = #{managementId}
            </if>
            <if test="companyId != null and companyId !=''">
                AND CompanyId = #{companyId}
            </if>
            <if test="name != null and name != ''">
                AND PREmployeeGroupName = #{name}
            </if>
            <if test="remark != null and remark != ''">
                AND Remark = #{remark}
            </if>
            <if test="isActive != null">
                AND IsActive = #{isActive}
            </if>
        </trim>
    </sql>

</mapper>
